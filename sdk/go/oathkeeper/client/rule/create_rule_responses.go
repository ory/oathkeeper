// Code generated by go-swagger; DO NOT EDIT.

package rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ory/oathkeeper/sdk/go/oathkeeper/models"
)

// CreateRuleReader is a Reader for the CreateRule structure.
type CreateRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateRuleCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCreateRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateRuleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateRuleCreated creates a CreateRuleCreated with default headers values
func NewCreateRuleCreated() *CreateRuleCreated {
	return &CreateRuleCreated{}
}

/*CreateRuleCreated handles this case with default header values.

A rule
*/
type CreateRuleCreated struct {
	Payload *models.SwaggerRule
}

func (o *CreateRuleCreated) Error() string {
	return fmt.Sprintf("[POST /rules][%d] createRuleCreated  %+v", 201, o.Payload)
}

func (o *CreateRuleCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SwaggerRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRuleUnauthorized creates a CreateRuleUnauthorized with default headers values
func NewCreateRuleUnauthorized() *CreateRuleUnauthorized {
	return &CreateRuleUnauthorized{}
}

/*CreateRuleUnauthorized handles this case with default header values.

The standard error format
*/
type CreateRuleUnauthorized struct {
	Payload *CreateRuleUnauthorizedBody
}

func (o *CreateRuleUnauthorized) Error() string {
	return fmt.Sprintf("[POST /rules][%d] createRuleUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRuleUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRuleForbidden creates a CreateRuleForbidden with default headers values
func NewCreateRuleForbidden() *CreateRuleForbidden {
	return &CreateRuleForbidden{}
}

/*CreateRuleForbidden handles this case with default header values.

The standard error format
*/
type CreateRuleForbidden struct {
	Payload *CreateRuleForbiddenBody
}

func (o *CreateRuleForbidden) Error() string {
	return fmt.Sprintf("[POST /rules][%d] createRuleForbidden  %+v", 403, o.Payload)
}

func (o *CreateRuleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRuleForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRuleInternalServerError creates a CreateRuleInternalServerError with default headers values
func NewCreateRuleInternalServerError() *CreateRuleInternalServerError {
	return &CreateRuleInternalServerError{}
}

/*CreateRuleInternalServerError handles this case with default header values.

The standard error format
*/
type CreateRuleInternalServerError struct {
	Payload *CreateRuleInternalServerErrorBody
}

func (o *CreateRuleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /rules][%d] createRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRuleInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateRuleForbiddenBody create rule forbidden body
swagger:model CreateRuleForbiddenBody
*/
type CreateRuleForbiddenBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []map[string]interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this create rule forbidden body
func (o *CreateRuleForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRuleForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRuleForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CreateRuleForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateRuleInternalServerErrorBody create rule internal server error body
swagger:model CreateRuleInternalServerErrorBody
*/
type CreateRuleInternalServerErrorBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []map[string]interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this create rule internal server error body
func (o *CreateRuleInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRuleInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRuleInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CreateRuleInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateRuleUnauthorizedBody create rule unauthorized body
swagger:model CreateRuleUnauthorizedBody
*/
type CreateRuleUnauthorizedBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []map[string]interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this create rule unauthorized body
func (o *CreateRuleUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateRuleUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRuleUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CreateRuleUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
