/**
 * ORY Oathkeeper
 * ORY Oathkeeper is a reverse proxy that checks the HTTP Authorization for validity against a set of rules. This service uses Hydra to validate access tokens and policies.
 *
 * OpenAPI spec version: Latest
 * Contact: hi@ory.am
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SwaggerRuleHandler', 'model/SwaggerRuleMatch', 'model/Upstream'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SwaggerRuleHandler'), require('./SwaggerRuleMatch'), require('./Upstream'));
  } else {
    // Browser globals (root is window)
    if (!root.OryOathkeeper) {
      root.OryOathkeeper = {};
    }
    root.OryOathkeeper.SwaggerRule = factory(root.OryOathkeeper.ApiClient, root.OryOathkeeper.SwaggerRuleHandler, root.OryOathkeeper.SwaggerRuleMatch, root.OryOathkeeper.Upstream);
  }
}(this, function(ApiClient, SwaggerRuleHandler, SwaggerRuleMatch, Upstream) {
  'use strict';




  /**
   * The SwaggerRule model module.
   * @module model/SwaggerRule
   * @version Latest
   */

  /**
   * Constructs a new <code>SwaggerRule</code>.
   * @alias module:model/SwaggerRule
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>SwaggerRule</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SwaggerRule} obj Optional instance to populate.
   * @return {module:model/SwaggerRule} The populated <code>SwaggerRule</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('authenticators')) {
        obj['authenticators'] = ApiClient.convertToType(data['authenticators'], [SwaggerRuleHandler]);
      }
      if (data.hasOwnProperty('authorizer')) {
        obj['authorizer'] = SwaggerRuleHandler.constructFromObject(data['authorizer']);
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('match')) {
        obj['match'] = SwaggerRuleMatch.constructFromObject(data['match']);
      }
      if (data.hasOwnProperty('mutators')) {
        obj['mutators'] = ApiClient.convertToType(data['mutators'], [SwaggerRuleHandler]);
      }
      if (data.hasOwnProperty('upstream')) {
        obj['upstream'] = Upstream.constructFromObject(data['upstream']);
      }
    }
    return obj;
  }

  /**
   * Authenticators is a list of authentication handlers that will try and authenticate the provided credentials. Authenticators are checked iteratively from index 0 to n and if the first authenticator to return a positive result will be the one used.  If you want the rule to first check a specific authenticator  before \"falling back\" to others, have that authenticator as the first item in the array.
   * @member {Array.<module:model/SwaggerRuleHandler>} authenticators
   */
  exports.prototype['authenticators'] = undefined;
  /**
   * @member {module:model/SwaggerRuleHandler} authorizer
   */
  exports.prototype['authorizer'] = undefined;
  /**
   * Description is a human readable description of this rule.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * ID is the unique id of the rule. It can be at most 190 characters long, but the layout of the ID is up to you. You will need this ID later on to update or delete the rule.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {module:model/SwaggerRuleMatch} match
   */
  exports.prototype['match'] = undefined;
  /**
   * Mutators is a list of mutation handlers that transform the HTTP request. A common use case is generating a new set of credentials (e.g. JWT) which then will be forwarded to the upstream server.  Mutations are performed iteratively from index 0 to n and should all succeed in order for the HTTP request to be forwarded.
   * @member {Array.<module:model/SwaggerRuleHandler>} mutators
   */
  exports.prototype['mutators'] = undefined;
  /**
   * @member {module:model/Upstream} upstream
   */
  exports.prototype['upstream'] = undefined;



  return exports;
}));


