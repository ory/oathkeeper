# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.9
        environment:
        - PG_URL=postgres://test:test@localhost:5432/oathkeeper?sslmode=disable
      - image: postgres:9.5
        environment:
        - POSTGRES_USER=test
        - POSTGRES_PASSWORD=test
        - POSTGRES_DB=oathkeeper

    working_directory: /go/src/github.com/ory/oathkeeper
    steps:
      - checkout
      - setup_remote_docker
      - run: go get -u github.com/go-swagger/go-swagger/cmd/swagger github.com/bradfitz/goimports github.com/mattn/goveralls golang.org/x/tools/cmd/cover github.com/ory/go-acc
      - run: curl -L -s https://github.com/golang/dep/releases/download/v0.3.2/dep-linux-amd64 -o /go/bin/dep && chmod +x /go/bin/dep

      # Installation
      - run: curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
      - run: dep ensure -vendor-only
      - run: go install github.com/ory/oathkeeper

      # Format
      - run: ./scripts/test-format.sh

      # Tests
      - run: go-acc -o coverage.txt $(glide novendor)
      - run: go test -race -short $(glide novendor | grep -v cmd)

      # See if swagger works
      - run: ./scripts/run-genswag.sh

      # Build and test dockerfiles
      - run: docker build -t oathkeeper-proxy-travis-ci -f Dockerfile-proxy .
      - run: docker build -t oathkeeper-management-travis-ci -f Dockerfile-management .
      - run: docker run -d oathkeeper-proxy-travis-ci
      - run: docker run -d oathkeeper-management-travis-ci

      # Submit coverage details
      # - run: goveralls -service=circle-ci -coverprofile=coverage.txt -repotoken=$COVERALLS_REPO_TOKEN
