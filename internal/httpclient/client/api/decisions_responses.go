// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DecisionsReader is a Reader for the Decisions structure.
type DecisionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DecisionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDecisionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDecisionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDecisionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDecisionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDecisionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDecisionsOK creates a DecisionsOK with default headers values
func NewDecisionsOK() *DecisionsOK {
	return &DecisionsOK{}
}

/*DecisionsOK handles this case with default header values.

An empty response
*/
type DecisionsOK struct {
}

func (o *DecisionsOK) Error() string {
	return fmt.Sprintf("[GET /decisions][%d] decisionsOK ", 200)
}

func (o *DecisionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDecisionsUnauthorized creates a DecisionsUnauthorized with default headers values
func NewDecisionsUnauthorized() *DecisionsUnauthorized {
	return &DecisionsUnauthorized{}
}

/*DecisionsUnauthorized handles this case with default header values.

The standard error format
*/
type DecisionsUnauthorized struct {
	Payload *DecisionsUnauthorizedBody
}

func (o *DecisionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /decisions][%d] decisionsUnauthorized  %+v", 401, o.Payload)
}

func (o *DecisionsUnauthorized) GetPayload() *DecisionsUnauthorizedBody {
	return o.Payload
}

func (o *DecisionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DecisionsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDecisionsForbidden creates a DecisionsForbidden with default headers values
func NewDecisionsForbidden() *DecisionsForbidden {
	return &DecisionsForbidden{}
}

/*DecisionsForbidden handles this case with default header values.

The standard error format
*/
type DecisionsForbidden struct {
	Payload *DecisionsForbiddenBody
}

func (o *DecisionsForbidden) Error() string {
	return fmt.Sprintf("[GET /decisions][%d] decisionsForbidden  %+v", 403, o.Payload)
}

func (o *DecisionsForbidden) GetPayload() *DecisionsForbiddenBody {
	return o.Payload
}

func (o *DecisionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DecisionsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDecisionsNotFound creates a DecisionsNotFound with default headers values
func NewDecisionsNotFound() *DecisionsNotFound {
	return &DecisionsNotFound{}
}

/*DecisionsNotFound handles this case with default header values.

The standard error format
*/
type DecisionsNotFound struct {
	Payload *DecisionsNotFoundBody
}

func (o *DecisionsNotFound) Error() string {
	return fmt.Sprintf("[GET /decisions][%d] decisionsNotFound  %+v", 404, o.Payload)
}

func (o *DecisionsNotFound) GetPayload() *DecisionsNotFoundBody {
	return o.Payload
}

func (o *DecisionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DecisionsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDecisionsInternalServerError creates a DecisionsInternalServerError with default headers values
func NewDecisionsInternalServerError() *DecisionsInternalServerError {
	return &DecisionsInternalServerError{}
}

/*DecisionsInternalServerError handles this case with default header values.

The standard error format
*/
type DecisionsInternalServerError struct {
	Payload *DecisionsInternalServerErrorBody
}

func (o *DecisionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /decisions][%d] decisionsInternalServerError  %+v", 500, o.Payload)
}

func (o *DecisionsInternalServerError) GetPayload() *DecisionsInternalServerErrorBody {
	return o.Payload
}

func (o *DecisionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DecisionsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DecisionsForbiddenBody decisions forbidden body
swagger:model DecisionsForbiddenBody
*/
type DecisionsForbiddenBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this decisions forbidden body
func (o *DecisionsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DecisionsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DecisionsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res DecisionsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DecisionsInternalServerErrorBody decisions internal server error body
swagger:model DecisionsInternalServerErrorBody
*/
type DecisionsInternalServerErrorBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this decisions internal server error body
func (o *DecisionsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DecisionsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DecisionsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DecisionsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DecisionsNotFoundBody decisions not found body
swagger:model DecisionsNotFoundBody
*/
type DecisionsNotFoundBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this decisions not found body
func (o *DecisionsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DecisionsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DecisionsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DecisionsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DecisionsUnauthorizedBody decisions unauthorized body
swagger:model DecisionsUnauthorizedBody
*/
type DecisionsUnauthorizedBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this decisions unauthorized body
func (o *DecisionsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DecisionsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DecisionsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res DecisionsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
