// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MakeGenericDecisionReader is a Reader for the MakeGenericDecision structure.
type MakeGenericDecisionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MakeGenericDecisionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMakeGenericDecisionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewMakeGenericDecisionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMakeGenericDecisionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMakeGenericDecisionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMakeGenericDecisionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMakeGenericDecisionOK creates a MakeGenericDecisionOK with default headers values
func NewMakeGenericDecisionOK() *MakeGenericDecisionOK {
	return &MakeGenericDecisionOK{}
}

/*MakeGenericDecisionOK handles this case with default header values.

An empty response
*/
type MakeGenericDecisionOK struct {
}

func (o *MakeGenericDecisionOK) Error() string {
	return fmt.Sprintf("[GET /decisions/generic][%d] makeGenericDecisionOK ", 200)
}

func (o *MakeGenericDecisionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMakeGenericDecisionUnauthorized creates a MakeGenericDecisionUnauthorized with default headers values
func NewMakeGenericDecisionUnauthorized() *MakeGenericDecisionUnauthorized {
	return &MakeGenericDecisionUnauthorized{}
}

/*MakeGenericDecisionUnauthorized handles this case with default header values.

The standard error format
*/
type MakeGenericDecisionUnauthorized struct {
	Payload *MakeGenericDecisionUnauthorizedBody
}

func (o *MakeGenericDecisionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /decisions/generic][%d] makeGenericDecisionUnauthorized  %+v", 401, o.Payload)
}

func (o *MakeGenericDecisionUnauthorized) GetPayload() *MakeGenericDecisionUnauthorizedBody {
	return o.Payload
}

func (o *MakeGenericDecisionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MakeGenericDecisionUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMakeGenericDecisionForbidden creates a MakeGenericDecisionForbidden with default headers values
func NewMakeGenericDecisionForbidden() *MakeGenericDecisionForbidden {
	return &MakeGenericDecisionForbidden{}
}

/*MakeGenericDecisionForbidden handles this case with default header values.

The standard error format
*/
type MakeGenericDecisionForbidden struct {
	Payload *MakeGenericDecisionForbiddenBody
}

func (o *MakeGenericDecisionForbidden) Error() string {
	return fmt.Sprintf("[GET /decisions/generic][%d] makeGenericDecisionForbidden  %+v", 403, o.Payload)
}

func (o *MakeGenericDecisionForbidden) GetPayload() *MakeGenericDecisionForbiddenBody {
	return o.Payload
}

func (o *MakeGenericDecisionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MakeGenericDecisionForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMakeGenericDecisionNotFound creates a MakeGenericDecisionNotFound with default headers values
func NewMakeGenericDecisionNotFound() *MakeGenericDecisionNotFound {
	return &MakeGenericDecisionNotFound{}
}

/*MakeGenericDecisionNotFound handles this case with default header values.

The standard error format
*/
type MakeGenericDecisionNotFound struct {
	Payload *MakeGenericDecisionNotFoundBody
}

func (o *MakeGenericDecisionNotFound) Error() string {
	return fmt.Sprintf("[GET /decisions/generic][%d] makeGenericDecisionNotFound  %+v", 404, o.Payload)
}

func (o *MakeGenericDecisionNotFound) GetPayload() *MakeGenericDecisionNotFoundBody {
	return o.Payload
}

func (o *MakeGenericDecisionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MakeGenericDecisionNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMakeGenericDecisionInternalServerError creates a MakeGenericDecisionInternalServerError with default headers values
func NewMakeGenericDecisionInternalServerError() *MakeGenericDecisionInternalServerError {
	return &MakeGenericDecisionInternalServerError{}
}

/*MakeGenericDecisionInternalServerError handles this case with default header values.

The standard error format
*/
type MakeGenericDecisionInternalServerError struct {
	Payload *MakeGenericDecisionInternalServerErrorBody
}

func (o *MakeGenericDecisionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /decisions/generic][%d] makeGenericDecisionInternalServerError  %+v", 500, o.Payload)
}

func (o *MakeGenericDecisionInternalServerError) GetPayload() *MakeGenericDecisionInternalServerErrorBody {
	return o.Payload
}

func (o *MakeGenericDecisionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(MakeGenericDecisionInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*MakeGenericDecisionForbiddenBody make generic decision forbidden body
swagger:model MakeGenericDecisionForbiddenBody
*/
type MakeGenericDecisionForbiddenBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this make generic decision forbidden body
func (o *MakeGenericDecisionForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MakeGenericDecisionForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MakeGenericDecisionForbiddenBody) UnmarshalBinary(b []byte) error {
	var res MakeGenericDecisionForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MakeGenericDecisionInternalServerErrorBody make generic decision internal server error body
swagger:model MakeGenericDecisionInternalServerErrorBody
*/
type MakeGenericDecisionInternalServerErrorBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this make generic decision internal server error body
func (o *MakeGenericDecisionInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MakeGenericDecisionInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MakeGenericDecisionInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res MakeGenericDecisionInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MakeGenericDecisionNotFoundBody make generic decision not found body
swagger:model MakeGenericDecisionNotFoundBody
*/
type MakeGenericDecisionNotFoundBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this make generic decision not found body
func (o *MakeGenericDecisionNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MakeGenericDecisionNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MakeGenericDecisionNotFoundBody) UnmarshalBinary(b []byte) error {
	var res MakeGenericDecisionNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*MakeGenericDecisionUnauthorizedBody make generic decision unauthorized body
swagger:model MakeGenericDecisionUnauthorizedBody
*/
type MakeGenericDecisionUnauthorizedBody struct {

	// code
	Code int64 `json:"code,omitempty"`

	// details
	Details []interface{} `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this make generic decision unauthorized body
func (o *MakeGenericDecisionUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *MakeGenericDecisionUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *MakeGenericDecisionUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res MakeGenericDecisionUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
