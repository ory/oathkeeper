// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./proxy/authorizer_keto_warden.go

package proxy

import (
	gomock "github.com/golang/mock/gomock"

	swagger "github.com/ory/keto/sdk/go/keto/swagger"
)

// Mock of KetoWardenSDK interface
type MockKetoWardenSDK struct {
	ctrl     *gomock.Controller
	recorder *_MockKetoWardenSDKRecorder
}

// Recorder for MockKetoWardenSDK (not exported)
type _MockKetoWardenSDKRecorder struct {
	mock *MockKetoWardenSDK
}

func NewMockKetoWardenSDK(ctrl *gomock.Controller) *MockKetoWardenSDK {
	mock := &MockKetoWardenSDK{ctrl: ctrl}
	mock.recorder = &_MockKetoWardenSDKRecorder{mock}
	return mock
}

func (_m *MockKetoWardenSDK) EXPECT() *_MockKetoWardenSDKRecorder {
	return _m.recorder
}

func (_m *MockKetoWardenSDK) DoOryAccessControlPoliciesAllow(flavor string, body swagger.OryAccessControlPolicyAllowedInput) (*swagger.AuthorizationResult, *swagger.APIResponse, error) {
	ret := _m.ctrl.Call(_m, "DoOryAccessControlPoliciesAllow", flavor, body)
	ret0, _ := ret[0].(*swagger.AuthorizationResult)
	ret1, _ := ret[1].(*swagger.APIResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockKetoWardenSDKRecorder) DoOryAccessControlPoliciesAllow(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DoOryAccessControlPoliciesAllow", arg0, arg1)
}
