// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./proxy/authenticator_oauth2_introspection.go

package proxy

import (
	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory/fosite"
	authentication "github.com/ory/keto/authentication"
)

// Mock of authenticatorOAuth2IntrospectionHelper interface
type MockauthenticatorOAuth2IntrospectionHelper struct {
	ctrl     *gomock.Controller
	recorder *_MockauthenticatorOAuth2IntrospectionHelperRecorder
}

// Recorder for MockauthenticatorOAuth2IntrospectionHelper (not exported)
type _MockauthenticatorOAuth2IntrospectionHelperRecorder struct {
	mock *MockauthenticatorOAuth2IntrospectionHelper
}

func NewMockauthenticatorOAuth2IntrospectionHelper(ctrl *gomock.Controller) *MockauthenticatorOAuth2IntrospectionHelper {
	mock := &MockauthenticatorOAuth2IntrospectionHelper{ctrl: ctrl}
	mock.recorder = &_MockauthenticatorOAuth2IntrospectionHelperRecorder{mock}
	return mock
}

func (_m *MockauthenticatorOAuth2IntrospectionHelper) EXPECT() *_MockauthenticatorOAuth2IntrospectionHelperRecorder {
	return _m.recorder
}

func (_m *MockauthenticatorOAuth2IntrospectionHelper) Introspect(token string, scopes []string, strategy fosite.ScopeStrategy) (*authentication.IntrospectionResponse, error) {
	ret := _m.ctrl.Call(_m, "Introspect", token, scopes, strategy)
	ret0, _ := ret[0].(*authentication.IntrospectionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockauthenticatorOAuth2IntrospectionHelperRecorder) Introspect(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Introspect", arg0, arg1, arg2)
}
